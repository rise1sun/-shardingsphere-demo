spring:
  # ShardingSphere 配置项
  shardingsphere:
    datasource:
      # 所有数据源的名字
      names: ds-barcode-0, ds-barcode-1
      # barcode 数据源配置 00
      ds-barcode-0:
        type: com.zaxxer.hikari.HikariDataSource # 使用 Hikari 数据库连接池
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://124.70.221.38:3306/feng_0?useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: 123456@qwer
      # barcode 数据源配置 01
      ds-barcode-1:
        type: com.zaxxer.hikari.HikariDataSource # 使用 Hikari 数据库连接池
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://124.70.221.38:3306/feng_1?useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: 123456@qwer
    # 分片规则
    sharding:
      tables:
        # orders 表配置
        orders:
          actualDataNodes: ds-barcode-0.barcode_$->{[0,2,4,6]}, ds-barcode-1.barcode_$->{[1,3,5,7]} # 映射到 ds-barcode-0 和 ds-barcode-1 数据源的 barcode 表们
          key-generator: # 主键生成策略
            column: id
            type: SNOWFLAKE
          database-strategy:
            inline:
              algorithm-expression: ds-barcode-$->{barcode % 2}
              sharding-column: barcode
          table-strategy:
            inline:
              algorithm-expression: barcode_$->{barcode % 8}
              sharding-column: barcode
    # 拓展属性配置
    props:
      sql:
        show: true # 打印 SQL

# mybatis 配置内容
mybatis:
  config-location: classpath:mybatis-config.xml # 配置 MyBatis 配置文件路径
  mapper-locations: classpath:mapper/*.xml # 配置 Mapper XML 地址
  type-aliases-package: com.feng.entity # 配置数据库实体包路径